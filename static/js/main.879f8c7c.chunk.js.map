{"version":3,"sources":["axios-instance.js","store/actions/actionTypes.js","components/loader/Loader.js","store/actions/navigation.js","store/actions/search.js","store/actions/pokemonList.js","store/actions/index.js","components/navigation/Toolbar.js","components/backdrop/Backdrop.js","components/search/Search.js","components/navigation/Sidedrawer.js","hoc/Layout.js","components/errorBoundary/errorBoundary.js","components/pokemonList/PokemonList.js","components/details/Bar.js","components/details/Details.js","components/home/Home.js","App.js","serviceWorker.js","store/reducers/search.js","store/reducers/pokemonList.js","store/reducers/navigation.js","index.js"],"names":["instance","axios","create","baseURL","TOGGLE_SEARCH","TOGGLE_SIDEDRAWER","TOGGLE_BARS","SEARCH_INIT","SEARCH_SUCCESS","POKEMON_LIST_INIT","POKEMON_LIST_SUCCESS","POKEMON_LIST_FAIL","POKEMON_LIST_FILTER","POKEMON_LIST_CLEAR_FILTER","EVOLUTION_IMAGE_INIT","EVOLUTION_IMAGE_SUCCESS","Loader","className","toggleSearch","type","actionTypes","toggleSidedrawer","getWindowWidth","width","dispatch","toggleBars","searchPokemon","name","get","then","res","details","data","stats","map","s","stat","base_stat","id","species","sprites","front_default","types","t","abilities","species_url","url","getDetails","searchSuccess","convertURLToArray","substr","length","split","evolutionImages","pokemonEvoImage","sprite","getEvolutionImage","evolutionImageSuccess","speciesURL","array","secondEvolution","chain","thirdEvolution","filter","pokemon","getEvolutionChainDetails","forEach","evolutionChainDetails","getPokemonList","pokemonList","pokemonListFilter","filterName","pokemonListClearFilter","Toolbar","useDispatch","windowWidth","useSelector","state","navigation","useEffect","window","addEventListener","actions","innerWidth","smallScreen","onClick","icon","faBars","largeScreen","Fragment","activeClassName","to","Backdrop","show","click","withRouter","props","useState","setName","search","onSubmit","event","preventDefault","history","push","value","onChange","e","target","trim","toLowerCase","faSearch","Sidedrawer","showSidedrawer","toggleSideDrawer","useCallback","sideDrawer","Layout","ErrorBoundary","error","setError","Axios","interceptors","request","use","req","response","message","children","Generations","React","lazy","Lists","loader","fallback","path","component","Bar","num","style","willUnmount","useRef","loading","pokemonDetails","pokemonEvoImages","console","log","current","match","params","src","alt","key","hp","attack","defense","speed","href","Home","App","PokemonList","Details","exact","Boolean","location","hostname","initialState","toggle","searchInit","action","reducer","generations","list","filteredList","pokemonListInit","pokemonListSuccess","pokemonListFail","filterList","includes","composeEnhancers","compose","reducers","combineReducers","navigationReducer","SearchReducer","pokemonListReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.879f8c7c.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst instance = axios.create({\n  baseURL: 'https://pokeapi.co/api/v2/'\n});\n\nexport default instance;","export const TOGGLE_SEARCH = 'TOGGLE_SEARCH';\nexport const TOGGLE_SIDEDRAWER = 'TOGGLE_SIDEDRAWER';\nexport const TOGGLE_BARS = 'TOGGLE_BARS';\n\nexport const SEARCH_INIT ='SEARCH_INIT';\nexport const SEARCH_SUCCESS = 'SEARCH_SUCCESS';\nexport const SEARCH_FAIL = 'SEARCH_FAIL';\n\nexport const POKEMON_LIST_INIT = 'POKEMON_LIST_INIT';\nexport const POKEMON_LIST_SUCCESS = 'POKEMON_LIST_SUCCESS';\nexport const POKEMON_LIST_FAIL = 'POKEMON_LIST_FAIL';\nexport const POKEMON_LIST_FILTER = 'POKEMON_LIST_FILTER';\nexport const POKEMON_LIST_CLEAR_FILTER = 'POKEMON_LIST_CLEAR_FILTER';\n\nexport const EVOLUTION_IMAGE_INIT = 'EVOLUTION_IMAGE_INIT';\nexport const EVOLUTION_IMAGE_SUCCESS = 'EVOLUTION_IMAGE_SUCCESS';\nexport const EVOLUTION_IMAGE_FAIL = 'EVOLUTION_IMAGE_FAIL';","import React from 'react'\n\nconst Loader = () => {\n  return ( \n    <div className=\"Loader\">\n      <div className=\"Loader__content\">Loading</div>\n    </div>\n   );\n}\n \nexport default Loader;","import * as actionTypes from './actionTypes';\n\nexport const toggleSearch = () => {\n  return {\n    type: actionTypes.TOGGLE_SEARCH\n  }\n}\n\nexport const toggleBars = (width) => {\n  return {\n    type: actionTypes.TOGGLE_BARS,\n    width\n  }\n}\n\nexport const toggleSidedrawer = () => {\n  return {\n    type: actionTypes.TOGGLE_SIDEDRAWER\n  }\n}\n\nexport const getWindowWidth = (width) => {\n  return dispatch => {\n      dispatch(toggleBars(width))\n\n  }\n}","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-instance';\n\n// Start of obtaining pokemon details\nexport const searchInit = () => {\n  return {\n    type: actionTypes.SEARCH_INIT\n  }\n}\n\nexport const searchSuccess = (details) => {\n  return {\n    type: actionTypes.SEARCH_SUCCESS,\n    details\n  }\n}\nconst getDetails = (data) => {\n  const stats = {};\n  data.stats.map(s => stats[s.stat.name] = s.base_stat);\n  const details = {\n    id: data.id,\n    name: data.species.name,\n    sprites: data.sprites.front_default,\n    types: data.types.map(t => t.type.name),\n    abilities: data.abilities,\n    species_url: data.species.url,\n    stats\n  };\n\n  return details;\n}\n\n/* Connecting to api end point */\nexport const searchPokemon = (name) => {\n  return dispatch => {\n    dispatch(searchInit());\n    axios.get(`pokemon/${name}`)\n      .then(res => {\n        const details = getDetails(res.data)\n        dispatch(searchSuccess(details))\n      })\n  }\n\n}\n// End of obtaining pokemon details\n\n// Start of obtaining evolution details\nexport const evolutionImageInit = () => {\n  return {\n    type: actionTypes.EVOLUTION_IMAGE_INIT\n  }\n}\n\nexport const evolutionImageSuccess = (pokemonEvoImage) => {\n  return {\n    type: actionTypes.EVOLUTION_IMAGE_SUCCESS,\n    pokemonEvoImage: pokemonEvoImage\n  }\n}\n\n// Removes the backslash of the URL and convert it to array\nconst convertURLToArray = (url) => {\n  return url.substr(0, url.length-1).split('/');\n}\n\nconst getEvolutionChainDetails = (data) => {\n\n  const secondEvolution = data.chain['evolves_to'].length ? data.chain['evolves_to'][0] : null;\n  const thirdEvolution = secondEvolution ? secondEvolution['evolves_to'][0] : null;\n\n  const firstEvolutionName = data.chain.species.name;\n  const secondEvolutionName = secondEvolution ? secondEvolution.species.name : null;\n  const thirdEvolutionName = thirdEvolution ? thirdEvolution.species.name : null;\n  const pokemonEvoData = [firstEvolutionName, secondEvolutionName, thirdEvolutionName];\n\n  return pokemonEvoData.filter(pokemon => pokemon);\n}\n\nconst getEvolutionImage = (name, sprite) => {\n  return {\n    name,\n    sprite\n  }\n}\n\n/* Query to api end points */\nconst evolutionImages = (name) => {\n  return dispatch => {\n    axios.get(`pokemon/${name}`)\n      .then(res => {\n        const pokemonEvoImage = getEvolutionImage(name, res.data.sprites.front_default);\n        dispatch(evolutionImageSuccess(pokemonEvoImage))\n      });\n  }\n}\n\nexport const evolutionChainDetails = (url) => {\n  const array = convertURLToArray(url);\n  const id = array[array.length - 1];\n\n  return dispatch => {\n    axios.get(`/evolution-chain/${id}`)\n      .then(res => {\n        const pokemonEvoData = getEvolutionChainDetails(res.data);\n        pokemonEvoData.forEach(pokemon => dispatch(evolutionImages(pokemon)));\n      })\n  }\n} \n\nexport const speciesURL = (url) => {\n  const array = convertURLToArray(url);\n  const id = array[array.length - 1];\n\n  return dispatch => {\n    axios.get(`pokemon-species/${id}`)\n      .then(res => {\n        dispatch(evolutionChainDetails(res.data['evolution_chain'].url))\n      })\n  }\n}\n\n// End of obtaining evolution details","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-instance';\n\n\nexport const pokemonListInit = () => {\n  return {\n    type: actionTypes.POKEMON_LIST_INIT\n  }\n}\n\nexport const pokemonListSuccess = (pokemonList) => {\n  return {\n    type: actionTypes.POKEMON_LIST_SUCCESS,\n    pokemonList,\n  }\n}\n\nexport const getPokemonList = (id) => {\n  return dispatch => {\n    dispatch(pokemonListInit());\n    axios.get(`/generation/${id}`)\n      .then(res => {\n        if(res) {\n          dispatch(pokemonListSuccess(res.data['pokemon_species']))\n        }\n      })\n  }\n}\n\nexport const pokemonListFilter = (filterName) => {\n  return {\n    type: actionTypes.POKEMON_LIST_FILTER,\n    filterName\n  }\n}\n\nexport const pokemonListClearFilter = () => {\n  return {\n    type: actionTypes.POKEMON_LIST_CLEAR_FILTER\n  }\n}","export {\n  toggleSearch, \n  toggleSidedrawer,\n  getWindowWidth\n} from './navigation';\n\nexport { \n  searchPokemon, \n  speciesURL \n} from './search';\n\n\nexport { \n  getPokemonList, \n  pokemonListFilter, \n  pokemonListClearFilter \n} from './pokemonList';","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, NavLink } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\n\nimport * as actions from '../../store/actions/index';\n\n\nconst Toolbar = () => {\n  const dispatch = useDispatch();\n\n  const windowWidth = useSelector(state => state.navigation.windowWidth);\n\n  const toggleSearch = () => dispatch(actions.toggleSearch());\n  const toggleSidedrawer = () => dispatch(actions.toggleSidedrawer());\n\n  useEffect(() => {\n    const getWindowWidth = () => dispatch(actions.getWindowWidth(window.innerWidth));\n    window.addEventListener('resize', getWindowWidth);\n\n  }, [dispatch]);\n\n  const smallScreen = \n    <li className=\"Toolbar__item\">\n      <FontAwesomeIcon onClick={toggleSidedrawer} className=\"Toolbar__bars\" icon={faBars} />\n    </li>\n\n    const largeScreen = (\n      <React.Fragment>\n        <li className=\"Toolbar__item\">\n          <NavLink className=\"Toolbar__link\" activeClassName=\"Toolbar__link--active\" to=\"/pokemon-list\">\n            Pokemon List\n          </NavLink>\n        </li>\n        <li className=\"Toolbar__item\">\n            <span className=\"Toolbar__search\" onClick={toggleSearch}>Search</span>\n        </li>\n      </React.Fragment>\n    )\n\n  return ( \n    <nav className=\"Toolbar\">\n      <Link className=\"Toolbar__brand\" to=\"/\">\n        <span className=\"Toolbar__brand--main\">P</span>\n        <span className=\"Toolbar__brand--sub\">okemon</span>\n      </Link>   \n      <ul className=\"Toolbar__list\">\n        {windowWidth > 600 && largeScreen}\n        {windowWidth <= 600 && smallScreen}\n      </ul>\n    </nav>\n   );\n}\n\n \nexport default Toolbar;","import React, {} from 'react';\n\nconst Backdrop = ({show, click}) => {\n  return  show ? <div className=\"Backdrop\" onClick={click}></div> : null;\n}\n \nexport default Backdrop;","import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport * as actions from '../../store/actions/index';\r\nimport Backdrop from '../backdrop/Backdrop';\r\n\r\n\r\nconst Search = (props) => {\r\n  const [name, setName] = useState('');\r\n\r\n  const toggleSearch = useSelector( state => state.navigation.toggleSearch);\r\n  \r\n  const dispatch = useDispatch();\r\n\r\n  const handleSearch = (event => {\r\n    event.preventDefault()\r\n    dispatch(actions.toggleSearch());\r\n    props.history.push(`/${name}`);\r\n  });\r\n  \r\n  // For showing the toggle on / off\r\n  const search = (\r\n    <div className=\"Search\">\r\n      <div className=\"Search__content\">\r\n        <h3 className=\"Search__title\">Search</h3>\r\n        <form onSubmit={handleSearch} className=\"Search__form\">\r\n          <input value={name} onChange={(e) => setName(e.target.value.trim().toLowerCase())} type=\"text\" className=\"Search__input\"/>\r\n          <button className=\"Search__submit\" type=\"submit\">\r\n            <FontAwesomeIcon className=\"Search__icon\" icon={faSearch} />\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  return ( \r\n    <React.Fragment>\r\n      <Backdrop show={toggleSearch} click={() => dispatch(actions.toggleSearch())}>\r\n      </Backdrop>\r\n      {toggleSearch && search}\r\n    </React.Fragment>\r\n   );\r\n}\r\n \r\nexport default withRouter(Search);","import React, { useEffect, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\nimport * as actions from '../../store/actions/index';\nimport Backdrop from '../backdrop/Backdrop';\n\nconst Sidedrawer = () => {\n  const dispatch = useDispatch()\n  const showSidedrawer = useSelector(state => state.navigation.toggleSidedrawer);\n  const toggleSearch = () => dispatch(actions.toggleSearch());\n  const toggleSideDrawer = useCallback(() => dispatch(actions.toggleSidedrawer()), [dispatch]);\n\n  useEffect(() => {\n\n    const clickHandler = (e) => {\n      const className = e.target.className;\n      switch(className) {\n        case 'Sidedrawer__link':\n        case 'Sidedrawer__link Sidedrawer__link--active':\n        case 'Sidedrawer__search':\n          toggleSideDrawer();\n          break;\n        default:\n          break;\n      }\n\n    }\n    window.addEventListener('click', clickHandler);\n\n\n  }, [dispatch, toggleSideDrawer])\n  const sideDrawer = (\n    <div className=\"Sidedrawer Sidedrawer--close\">\n      <div className=\"Sidedrawer__content\">\n        <h1 className=\"Sidedrawer__title\">Menu</h1>\n        <ul className=\"Sidedrawer__list\">\n          <li className=\"Sidedrawer__item\">\n            <NavLink className=\"Sidedrawer__link\" activeClassName=\"Sidedrawer__link--active\" to=\"/pokemon-list\">\n              Pokemon List\n            </NavLink>\n          </li>\n          <li className=\"Sidedrawer__item\">\n            <span className=\"Sidedrawer__search\" onClick={toggleSearch}>Search</span>\n          </li>\n        </ul>\n      </div>\n    </div>\n  )\n  return (\n    <React.Fragment>\n      <Backdrop show={showSidedrawer} click={toggleSideDrawer} />\n      {showSidedrawer && sideDrawer}\n    </React.Fragment>\n  );\n}\n \nexport default Sidedrawer;","import React from 'react'\nimport Toolbar from '../components/navigation/Toolbar';\nimport Search from '../components/search/Search';\nimport Sidedrawer from '../components/navigation/Sidedrawer';\n\nconst Layout = () => {\n\n  return ( \n    <React.Fragment>\n      <Search />\n      <Toolbar />\n      <Sidedrawer />\n    </React.Fragment>\n   );\n}\n \nexport default Layout;","import React, { useState, useEffect } from 'react';\nimport Axios from '../../axios-instance';\n\nconst ErrorBoundary = (props) => {\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    Axios.interceptors.request.use(req => {\n      setError(false);\n      return req;\n    });\n    Axios.interceptors.response.use(res => res, error => setError(error))\n  }, []);\n\n  return !error ? props.children : (\n    <div className=\"Error\">\n      <p className=\"Error__text\">{error.message}</p>\n    </div>\n  );\n}\n \nexport default ErrorBoundary;","import React, { Suspense } from 'react';\nimport { Route, withRouter } from 'react-router-dom';\nimport ErrorBoundary from '../errorBoundary/errorBoundary';\n\nconst Generations = React.lazy(() => import('./generations/Generations'))\nconst Lists = React.lazy(() => import('./lists/Lists'));\nconst PokemonList = (props) => {\n\n  const loader = (\n    <div className=\"Loader\">\n      <div className=\"Loader__content\">Loading</div>\n    </div>\n  )\n\n  return ( \n    <section className=\"section-pokemonList\">\n      <Suspense fallback={loader}>\n        <ErrorBoundary>\n          <Generations />\n          <Route path=\"/pokemon-list/:id\" component={Lists} />\n        </ErrorBoundary>\n      </Suspense>\n    </section>\n\n   );\n}\n \nexport default withRouter(PokemonList);","import React from 'react';\n\nconst Bar = ({num}) => {\n\n  let name = null\n\n  switch(true) {\n    case ++num < 60:\n      name = 'Details__bar--low';\n      break;\n    case ++num > 60 && ++num < 140:\n      name = 'Details__bar--medium';\n      break;\n    default:\n      name = 'Details__bar--high';\n      break;\n  }\n\n  const style = {\n    'width': `${++num * .1}rem`\n  }\n\n  return ( \n    <span className={name} style={style}></span>\n   );\n}\n \nexport default Bar;","import React, { useEffect, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport * as actions from '../../store/actions/index';\nimport Bar from './Bar';\nimport ErrorBoundary from '../errorBoundary/errorBoundary';\nimport Loader from '../loader/Loader';\n\n\nconst Details = props => {\n\n  const dispatch = useDispatch();\n\n  const willUnmount = useRef(false)\n\n  const loading = useSelector(state => state.search.loading);\n\n  const pokemonDetails = useSelector(state => state.search.pokemonDetails);\n\n  const pokemonEvoImages = useSelector(state => state.search.pokemonEvoImages);\n\n  console.log(pokemonEvoImages);\n\n  useEffect(() => {\n    return () => {\n      willUnmount.current = true;\n    }\n    \n  }, []);\n\n\n  useEffect(() => {\n    if (!willUnmount.current) {\n      dispatch(actions.searchPokemon(props.match.params.name))\n    }\n  \n  }, [props.match.params.name, dispatch]);\n\n  useEffect(() => {\n    if(!willUnmount.current && pokemonDetails) {\n      dispatch(actions.speciesURL(pokemonDetails['species_url']))\n    }\n  }, [pokemonDetails, dispatch])\n\n\n  let details = <Loader />\n  if(pokemonDetails && pokemonEvoImages && !loading) {\n    details = (\n      <section className=\"section-details\">\n        <div className=\"Details\">\n          <h1 className=\"Details__heading\">Pokemon Details</h1>\n          <div className=\"Details__card\">\n              <img className=\"Details__image\" src={pokemonDetails.sprites} alt=\"Pokemon\" />\n              <div className=\"Details__types\">\n                {pokemonDetails.types.map(t => <span key={t} className={`Details__type Details__type--${t}`}>{t}</span>)}\n              </div>\n              <h3 className=\"Details__title\">{pokemonDetails.name}</h3>\n              <ul className=\"Details__list\">\n                <li className={`Details__item`}>\n                  <span className=\"Details__text\">Hp</span>\n                  <Bar num={pokemonDetails.stats.hp} />\n                  <span className=\"Details__value\">{pokemonDetails.stats.hp}</span>\n                </li>\n                <li className={`Details__item`}>\n                  <span className=\"Details__text\">Atk</span>\n                  <Bar num={pokemonDetails.stats.attack} />\n                  <span className=\"Details__value\">{pokemonDetails.stats.attack}</span>\n                </li>\n                <li className={`Details__item`}>\n                  <span className=\"Details__text\">Def</span>\n                  <Bar num={pokemonDetails.stats.defense} />\n                  <span className=\"Details__value\">{pokemonDetails.stats.defense}</span>\n                </li>\n                <li className={`Details__item`}>\n                  <span className=\"Details__text\">Sp.Atk</span>\n                  <Bar num={pokemonDetails.stats['special-attack']} />\n                  <span className=\"Details__value\">{pokemonDetails.stats['special-attack']}</span>\n                </li>\n                <li className={`Details__item`}>\n                  <span className=\"Details__text\">Sp.Def</span>\n                  <Bar num={pokemonDetails.stats['special-defense']} />\n                  <span className=\"Details__value\">{pokemonDetails.stats['special-defense']}</span>\n                </li>\n                <li className={'Details__item'}>\n                  <span className=\"Details__text\">Spd</span>\n                  <Bar num={pokemonDetails.stats.speed} />\n                  <span className=\"Details__value\">{pokemonDetails.stats.speed}</span>\n                </li>\n              </ul>\n          </div>\n        </div>\n        <div className=\"EvoDetails\">\n          <h2 className=\"EvoDetails__heading\">{pokemonDetails.name}'s evolution family</h2>\n          <ul className=\"EvoDetails__list\">\n            {pokemonEvoImages.map(pokemon => {\n              return (\n                <li key={pokemon.name} className=\"EvoDetails__item\">\n                  <a className=\"EvoDetails__link\" href={`/${pokemon.name}`}>\n                    <img className=\"EvoDetails__image\" src={pokemon.sprite} alt=\"pokemon.name\"/>\n                    <span className=\"EvoDetails__text\">{pokemon.name}</span>\n                  </a>\n                </li>\n              )\n            })}\n          </ul>\n        </div>\n      </section>\n    )\n  }\n\n  return ( \n      <ErrorBoundary>\n        {details};\n      </ErrorBoundary>\n  )\n}\n \nexport default withRouter(Details);","import React from 'react'\n\nconst Home = () => {\n\n\n  return ( \n    <section className=\"section-home\">\n      <div className=\"Home\">\n        <h1 className=\"Home__title\">Pokemon App</h1>\n        <p className=\"Home__paragraph\">A simple React app about Pokemon using Poke Api</p>\n      </div>\n    </section>\n   );\n}\n \nexport default Home;","import React from 'react';\n\nimport Layout from './hoc/Layout';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Switch } from 'react-router-dom';\n\nimport PokemonList from './components/pokemonList/PokemonList';\nimport Details from './components/details/Details';\nimport Home from './components/home/Home';\n\nfunction App() {\n  return (\n    <Router>\n      <Layout />\n      <main className=\"App\">\n        <Switch>\n          <Route path=\"/pokemon-list\" component={PokemonList} />\n          <Route path=\"/:name\" component={Details} />\n          <Route path=\"/\" exact component={Home} />\n        </Switch>\n      </main>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  toggle: false,\n  loading: false,\n  pokemonDetails: null,\n  pokemonEvoImages: [],\n}\n\nconst searchInit = ( state, action ) => {\n  return { \n    ...state, \n    pokemonEvoImages: [],\n    pokemonDetails: null,\n    loading: true\n  }\n}\n\nconst searchSuccess = ( state, action ) => {\n  return {\n    ...state,\n    loading: false,\n    pokemonDetails: action.details\n  }\n}\n\nconst evolutionImageSuccess = ( state, action ) => {\n  const pokemonEvoImages = state.pokemonEvoImages;\n  return {\n    ...state,\n    pokemonEvoImages: [...pokemonEvoImages, action.pokemonEvoImage]\n  }\n}\n\nconst reducer = ( state = initialState, action ) => {\n  switch (action.type) {\n    case actionTypes.SEARCH_INIT:\n      return searchInit( state, action );\n    case actionTypes.SEARCH_SUCCESS:\n      return searchSuccess( state, action );\n    case actionTypes.EVOLUTION_IMAGE_SUCCESS:\n      return evolutionImageSuccess( state, action );\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  generations: [1,2,3,4,5,6,7],\n  loading: false,\n  list: null,\n  filterName: null,\n  filteredList: null\n}\n\nconst pokemonListInit = ( state, action ) => {\n  return {\n    ...state,\n    list: null,\n    filterName: null,\n    loading: true\n  }\n}\n\nconst pokemonListSuccess = ( state, action ) => {\n  return {\n    ...state,\n    loading: false,\n    list: action.pokemonList\n  }\n} \n\nconst pokemonListFail = ( state, action ) => {\n  return {\n    ...state,\n    loading: false,\n  }\n}\n\nconst pokemonListFilter = ( state , action ) => {\n  const filterList = state.list.filter(pokemon => pokemon.name.includes(action.filterName));\n  return {\n    ...state,\n    filterName: action.filterName,\n    filterList\n  }\n}\n\nconst pokemonListClearFilter = ( state, action ) => {\n  return {\n    ...state,\n    filterList: null\n  }\n}\n\nconst reducer = ( state = initialState, action ) => {\n  switch(action.type) {\n    case actionTypes.POKEMON_LIST_INIT: return pokemonListInit(state, action);\n    case actionTypes.POKEMON_LIST_SUCCESS: return pokemonListSuccess(state, action);\n    case actionTypes.POKEMON_LIST_FAIL: return pokemonListFail(state, action);\n    case actionTypes.POKEMON_LIST_FILTER: return pokemonListFilter(state, action);\n    case actionTypes.POKEMON_LIST_CLEAR_FILTER: return pokemonListClearFilter(state, action);\n    default: return state;\n  }\n}\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  toggleSearch: false,\n  toggleSidedrawer: false,\n  windowWidth: window.innerWidth\n}\n\nconst toggleBars = ( state, action ) => {\n  return {...state, windowWidth: action.width}\n}\n\nconst toggleSearch = ( state, action ) => {\n  return {...state, toggleSearch: !state.toggleSearch}\n}\n\nconst toggleSideDrawer = ( state, action ) => {\n  return {...state, toggleSidedrawer: !state.toggleSidedrawer}\n}\n\nconst reducer = ( state = initialState, action ) => {\n  switch(action.type) {\n    case actionTypes.TOGGLE_BARS:\n      return toggleBars( state, action );\n    case actionTypes.TOGGLE_SEARCH:\n      return toggleSearch( state, action );\n    case actionTypes.TOGGLE_SIDEDRAWER:\n      return toggleSideDrawer( state, action );\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './sass/main.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport SearchReducer from './store/reducers/search';\nimport pokemonListReducer from './store/reducers/pokemonList';\nimport navigationReducer from './store/reducers/navigation';\n\nimport { createStore, combineReducers, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst reducers = combineReducers({\n  navigation: navigationReducer,\n  search: SearchReducer,\n  pokemonList: pokemonListReducer\n});\n\nconst store = createStore(reducers , composeEnhancers(applyMiddleware(thunk)))\n\nconst app = (\n  <Provider store={store}>\n      <App />\n  </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}